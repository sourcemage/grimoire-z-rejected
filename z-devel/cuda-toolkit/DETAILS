           SPELL=cuda-toolkit
         VERSION=3.1
    if [[ "${SMGL_COMPAT_ARCHS[1]}" == "x86_64" || "${SMGL_COMPAT_ARCHS[1]}" == "em64t" ]]; then
        PLATFORM=64
    else
        PLATFORM=32
    fi
     DISTVERSION=suse11.2
          SOURCE=cudatoolkit_${VERSION}_linux_${PLATFORM}_${DISTVERSION}.run
   SOURCE_URL[0]=http://developer.download.nvidia.com/compute/cuda/${VERSION/./_}/toolkit/$SOURCE
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
     SOURCE_HASH=sha512:902acff4459de5a5df8e2edee515a76ea16fc1bc89610b83dcc160bdb86eb57dab8bb742f51bb342e2066b86503c788e09d040f56579726938478300d3d42631
        WEB_SITE=http://developer.nvidia.com/object/gpucomputing.html
         ENTERED=20100410
          REJECT="Non-Free Software license"
      LICENSE[0]=http://developer.download.nvidia.com/compute/cuda/${VERSION/./_}/toolkit/docs/EULA.txt
        KEYWORDS="cuda"
           SHORT="NVIDIA CUDA Toolkit"
cat << EOF
The CUDA architecture enables developers to leverage the massively parallel processing power of NVIDIA GPUs, delivering the performance of NVIDIAs world-renowned graphics processor technology to general purpose GPU Computing.

With the CUDA architecture and tools, developers are achieving dramatic speedups in fields such as medical imaging and natural resource exploration, and creating breakthrough applications in areas such as image recognition and real-time HD video playback and encoding. 

CUDA enables this unprecedented performance via standard APIs such OpenCL and DirectCompute, and high level programming languages such as C/C++, Fortran, Java, Python, and the Microsoft .NET Framework.
EOF
